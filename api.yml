# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /hello:
    get:
      summary: This is just a test endpoint to get you started.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Test return
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/HelloResponse"
  /estate:
    post:
      summary: Create and store a new estate
      description: Creates and stores a new palm oil plantation estate in the database.
        Receives two integers, width and length, representing the number of 10x10mÂ² plots.
        Both values must be between 1 and 50000.
      operationId: CreateEstate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstateRequest"
      responses:
        '200':
          description: Estate successfully created; returns a UUIDv4 string representing the estate.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEstateResponse"
        '400':
          $ref: "#/components/responses/Common400"
        '500':
          $ref: "#/components/responses/Common500"
  /estate/{id}/tree:
    post:
      summary: "Add a tree to a specific estate"
      description: "Stores tree data in a given estate with the specified ID."
      operationId: CreateTree
      parameters:
        - name: id
          in: path
          required: true
          description: "UUID of the estate where the tree is to be added"
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTreeRequest"
      responses:
        "201":
          description: "Tree successfully added"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTreeResponse"
        '400':
          $ref: "#/components/responses/Common400"
        '404':
          $ref: "#/components/responses/Common404"
        '500':
          $ref: "#/components/responses/Common500"
  /estate/{id}/stats:
    get:
      summary: Get Estate Statistics
      description: Retrieve statistics (count, max, min, median height) for trees in a specific estate.
      operationId: GetEstateStats
      parameters:
        - name: id
          in: path
          description: Unique identifier for the estate.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved estate statistics.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateStatsResponse'
        '400':
          $ref: "#/components/responses/Common400"
        '404':
          $ref: "#/components/responses/Common404"
        '500':
          $ref: "#/components/responses/Common500"
  /estate/{id}/drone-plan:
    get:
      summary: Get Drone Plan for Estate
      description: Retrieve the total drone travel distance for a given estate. Optionally, 
        if a maximum travel distance is provided, the endpoint will return landing coordinates where the drone should land.
      operationId: GetEstateDronePlan
      parameters:
        - name: id
          in: path
          description: Unique identifier for the estate.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved drone plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEstateDronePlanResponse'
        '400':
          $ref: "#/components/responses/Common400"
        '404':
          $ref: "#/components/responses/Common404"
        '500':
          $ref: "#/components/responses/Common500"
components:
  schemas:
    HelloResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: Hello, World!
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          example: "Invalid request/Not Found"
    EstateStatsResponse:
      type: object
      properties:
        count:
          type: integer
          example: 5
        max:
          type: integer
          example: 30
        min:
          type: integer
          example: 10
        median:
          type: number
          example: 20
    CreateEstateRequest:
      type: object
      properties:
        width:
          type: integer
          minimum: 1
          maximum: 50000
          example: 5
        length:
          type: integer
          minimum: 1
          maximum: 50000
          example: 10
      required:
        - length
        - width
    CreateEstateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "UUID of the newly created estate"
          example: "aaaaaa-bbbbbb-cccccc-ddddd"
    CreateTreeRequest:
      type: object
      properties:
        x:
          type: integer
          minimum: 1
          maximum: 50000
          description: "X-coordinate (West-East) of the tree's plot"
        y:
          type: integer
          minimum: 1
          maximum: 50000
          description: "Y-coordinate (South-North) of the tree's plot"
        height:
          type: integer
          minimum: 1
          maximum: 30
          description: "Height of the tree in meters (1 to 30)"
      required:
        - x
        - y
        - height
    CreateTreeResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "UUID of the newly created tree"
          example: "aaaaaa-bbbbbb-cccccc-ddddd"
    GetEstateDronePlanResponse:
      type: object
      properties:
        distance:
          type: number
          format: float
          example: 1000.0
  responses:
    Common400:
      description: Bad Request - Invalid input.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Common404:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Common500:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"